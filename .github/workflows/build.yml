name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        target:
          - x86_64-pc-windows-msvc

    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable
        rustup target add ${{ matrix.target }}
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/${{ matrix.target }}/release/digger.exe
        asset_name: digger-${{ matrix.target }}.exe
        asset_content_type: application/octet-stream
