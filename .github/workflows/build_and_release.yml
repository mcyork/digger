name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_LOG: "trace"

jobs:
  build:
    strategy:
      matrix:
        include:
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: digger-windows
            artifact_path: digger.exe
          - platform: macos-latest
            target: x86_64-apple-darwin
            artifact_name: digger-macos
            artifact_path: digger
          - platform: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: digger-linux
            artifact_path: digger

    runs-on: ${{ matrix.platform }}

    permissions:
      contents: write  # Ensure the workflow has write permissions to contents

    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - if: ${{ runner.os == 'Windows' }}
        uses: ilammy/setup-nasm@v1
      - name: Install Rust
        run: |
          rustup set profile minimal
          rustup toolchain install 1.74
          rustup default 1.74
          rustup override set 1.74
      - name: Build with All Features Enabled (Unix)
        if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
        run: cargo build --verbose 
      - name: Build with All Features Enabled (Windows)
        if: ${{ runner.os == 'Windows' }}
        run: cargo build --verbose
      - name: Create Release
        id: create_release
        uses: actions/create-release@vv1.10.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            This is an automatically generated release.
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@vv1.10.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ matrix.artifact_path }}
          asset_name: ${{ matrix.artifact_name }}
          asset_content_type: application/octet-stream
